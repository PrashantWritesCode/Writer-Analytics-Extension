{
  "version": 3,
  "sources": ["../src/background.ts"],
  "sourcesContent": ["\nconst CACHE_KEY = \"writerAnalyticsStats\";\n\n// Load cached stats\nasync function loadCachedStats(): Promise<StoryStats | null> {\n  try {\n    const result = await chrome.storage.local.get([CACHE_KEY]);\n    const cached = result[CACHE_KEY];\n    console.log(\"[WriterAnalytics][background] loaded cached stats\", !!cached);\n    return cached || null;\n  } catch (err) {\n    console.error(\"[WriterAnalytics][background] Error loading cache:\", err);\n    return null;\n  }\n}\n\n// Save stats to cache\nasync function saveCachedStats(stats: StoryStats): Promise<void> {\n  try {\n    await chrome.storage.local.set({ [CACHE_KEY]: stats });\n    console.log(\"[WriterAnalytics][background] saved stats for\", stats.title);\n  } catch (err) {\n    console.error(\"[WriterAnalytics][background] Error saving cache:\", err);\n  }\n}\n\n// Inject content script into Wattpad tabs\nasync function injectContentScript(tabId: number, url: string) {\n  try {\n    await chrome.scripting.executeScript({\n      target: { tabId },\n      files: [\"content.js\"],\n    });\n    console.log(`[WriterAnalytics][background] reinjected content.js into ${url}`);\n  } catch (err) {\n    console.warn(`[WriterAnalytics][background] failed to inject into ${url}:`, err);\n  }\n}\n\n// Check if URL is a Wattpad story\nfunction isWattpadStory(url: string): boolean {\n  return url.includes(\"wattpad.com\") && /\\/\\d+-/.test(url);\n}\n\n// Service worker startup\nconsole.log(\"[WriterAnalytics][background] service worker starting\");\n\n// Extension installed/updated\nchrome.runtime.onInstalled.addListener(async (details) => {\n  console.log(\"[WriterAnalytics][background] onInstalled\", details.reason);\n  \n  try {\n    const tabs = await chrome.tabs.query({ url: \"*://www.wattpad.com/*\" });\n    for (const tab of tabs) {\n      if (tab.id && tab.url && isWattpadStory(tab.url)) {\n        await injectContentScript(tab.id, tab.url);\n      }\n    }\n  } catch (err) {\n    console.error(\"[WriterAnalytics][background] Error injecting into existing tabs:\", err);\n  }\n});\n\n// Tab navigation\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n  if (changeInfo.status === \"complete\" && tab.url && isWattpadStory(tab.url)) {\n    await injectContentScript(tabId, tab.url);\n  }\n});\n\n// Message handling with proper async support\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  console.log(\"[WriterAnalytics][background] Received message:\", message.type);\n  \n  if (message.type === \"WA_STATS\") {\n    (async () => {\n      try {\n        const stats = message.payload as StoryStats;\n        console.log(\"[WriterAnalytics][background] caching WA_STATS\", stats.title);\n        \n        await saveCachedStats(stats);\n        \n        // Instead of getViews, send update to popup if needed via message\n        chrome.runtime.sendMessage({ type: \"WA_UPDATE\", payload: stats }, (response) => {\n          if (chrome.runtime.lastError) {\n            console.warn(\"[WriterAnalytics][background] No popup to update:\", chrome.runtime.lastError.message);\n          }\n        });\n        \n        sendResponse({ success: true });\n      } catch (err: any) {\n        console.error(\"[WriterAnalytics][background] Error handling WA_STATS:\", err);\n        sendResponse({ success: false, error: err.message });\n      }\n    })();\n    return true;\n  }\n  \n  if (message.type === \"GET_WA_STATS\") {\n    (async () => {\n      try {\n        const stats = await loadCachedStats();\n        console.log(\"[WriterAnalytics][background] Sending cached stats:\", !!stats);\n        sendResponse({ success: true, stats: stats });\n      } catch (err: any) {\n        console.error(\"[WriterAnalytics][background] Error loading cached stats:\", err);\n        sendResponse({ success: false, error: err.message });\n      }\n    })();\n    return true;\n  }\n  \n  if (message.type === \"WA_REFRESH\") {\n    (async () => {\n      try {\n        // Request content script to refresh\n        chrome.runtime.sendMessage({ type: \"WA_REFRESH\" }, (response) => {\n          if (response && response.payload) {\n            console.log(\"[WriterAnalytics][background] Received refreshed stats:\", response.payload);\n            saveCachedStats(response.payload).then(() => {\n              sendResponse({ success: true, payload: response.payload });\n            });\n          } else {\n            loadCachedStats().then((stats) => {\n              sendResponse({ success: true, payload: stats });\n            });\n          }\n        });\n      } catch (err: any) {\n        console.error(\"[WriterAnalytics][background] Error handling WA_REFRESH:\", err);\n        sendResponse({ success: false, error: err.message });\n      }\n    })();\n    return true;\n  }\n  \n  if (message.type === \"WA_URL_CHANGE\") {\n    (async () => {\n      try {\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n          if (tabs[0] && tabs[0].id) {\n            chrome.scripting.executeScript({\n              target: { tabId: tabs[0].id },\n              func: () => {\n                return window.extractStoryStats ? window.extractStoryStats() : null;\n              },\n            }, async (injectionResults) => {\n              if (injectionResults && injectionResults[0] && injectionResults[0].result) {\n                const stats = injectionResults[0].result as StoryStats;\n                await saveCachedStats(stats);\n                chrome.runtime.sendMessage({ type: \"WA_UPDATE\", payload: stats });\n                sendResponse({ success: true });\n              } else {\n                sendResponse({ success: false });\n              }\n            });\n          }\n        });\n      } catch (err: any) {\n        console.error(\"[WriterAnalytics][background] Error handling WA_URL_CHANGE:\", err);\n        sendResponse({ success: false, error: err.message });\n      }\n    })();\n    return true;\n  }\n  \n  return false;\n});"],
  "mappings": "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",
  "names": []
}
