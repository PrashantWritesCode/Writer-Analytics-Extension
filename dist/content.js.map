{
  "version": 3,
  "sources": ["../src/content.ts"],
  "sourcesContent": ["// src/content.ts\ntype ParagraphComment = {\n  pId: string;\n  count: number | null;\n  raw?: string;\n  snippet?: string;\n};\n\ntype StoryStats = {\n  storyId?: string;\n  title?: string | null;\n  author?: string | null;\n  reads?: number | null;\n  votes?: number | null;\n  headerComments?: number | null;\n  commentItemsCount?: number;\n  paragraphComments?: ParagraphComment[];\n  capturedAt?: string;\n  wordCount?: number;\n};\n\nfunction parseNumber(text: string): number | null {\n  if (!text) return null;\n  const clean = text.replace(/[^\\d.KMB]/gi, \"\");\n  const num = parseFloat(clean);\n  if (isNaN(num)) return null;\n  if (text.toUpperCase().includes(\"K\")) return Math.round(num * 1000);\n  if (text.toUpperCase().includes(\"M\")) return Math.round(num * 1000000);\n  if (text.toUpperCase().includes(\"B\")) return Math.round(num * 1000000000);\n  return Math.round(num);\n}\n\nfunction extractParagraphComments(): ParagraphComment[] {\n  const out: ParagraphComment[] = [];\n  try {\n    const paragraphElements = document.querySelectorAll(\"p[data-p-id]\");\n    paragraphElements.forEach((p) => {\n      const text = (p.textContent || \"\").trim();\n      if (text.length < 8) return;\n      const pId = p.getAttribute(\"data-p-id\") || `p-${out.length}`;\n      let count = 0;\n      const numEl = p.querySelector(\".num-comment\") as HTMLElement | null;\n      if (numEl && numEl.textContent) {\n        count = parseNumber(numEl.textContent.trim()) || 0;\n      }\n      out.push({\n        pId,\n        count,\n        raw: text,\n        snippet: text.slice(0, 150) + (text.length > 150 ? \"...\" : \"\"),\n      });\n    });\n  } catch (err) {\n    console.error(\"[content] paragraph extraction\", err);\n  }\n  return out;\n}\n\nfunction extractStoryStats(): StoryStats | null {\n  try {\n    // ---------- Title ----------\n    const titleSelectors = [\n      'h1[data-testid=\"story-title\"]',\n      \"h1.story-title\",\n      \"h1.h2\",\n      \".story-header h1\",\n      \".part-title h1\",\n      \"h1:first-of-type\",\n    ];\n    let title = null;\n    for (const s of titleSelectors) {\n      const el = document.querySelector(s);\n      if (el && el.textContent && el.textContent.trim()) {\n        title = el.textContent.trim();\n        break;\n      }\n    }\n\n    // ---------- Author (FIXED) ----------\n    const authorSelectors = [\n      \".author-info .info strong\", // sidebar strong\n      \".author-info a.on-navigate\",\n      \".author.hidden-lg a.on-navigate\",\n      \".author-name a\",\n      \".story-author a\",\n      \".username a\",\n      \".author a\",\n    ];\n    let author = null;\n    for (const s of authorSelectors) {\n      const el = document.querySelector(s);\n      if (el && el.textContent && el.textContent.trim()) {\n        author = el.textContent.replace(/^by\\s*/i, \"\").trim();\n        break;\n      }\n    }\n\n    // ---------- Reads ----------\n    const readsSelectors = [\n      '[data-testid=\"story-stats\"] span:first-child',\n      \".reads-count\",\n      \".story-stats .reads\",\n      \".stats .reads\",\n    ];\n    let reads = null;\n    for (const s of readsSelectors) {\n      const el = document.querySelector(s);\n      if (el && el.textContent && el.textContent.trim()) {\n        reads = parseNumber(el.textContent.trim());\n        break;\n      }\n    }\n\n    // ---------- Votes ----------\n    const votesSelectors = [\n      '[data-testid=\"story-votes\"] span',\n      \".votes-count\",\n      \".story-stats .votes\",\n      \".stats .votes\",\n    ];\n    let votes = null;\n    for (const s of votesSelectors) {\n      const el = document.querySelector(s);\n      if (el && el.textContent && el.textContent.trim()) {\n        votes = parseNumber(el.textContent.trim());\n        break;\n      }\n    }\n\n    // ---------- Comments ----------\n    const commentsSelectors = [\n      '[data-testid=\"story-comments\"] span',\n      \".comments-count\",\n      \".story-stats .comments\",\n      \".stats .comments\",\n    ];\n    let headerComments = null;\n    for (const s of commentsSelectors) {\n      const el = document.querySelector(s);\n      if (el && el.textContent && el.textContent.trim()) {\n        headerComments = parseNumber(el.textContent.trim());\n        break;\n      }\n    }\n\n    // ---------- Paragraph Comments ----------\n    const paragraphComments = extractParagraphComments();\n    const storyId = (\n      window.location.pathname.split(\"/\").pop() || \"unknown-story\"\n    ).replace(/\\?.*$/, \"\");\n\n    const stats: StoryStats = {\n      storyId,\n      title,\n      author,\n      reads,\n      votes,\n      headerComments,\n      commentItemsCount: paragraphComments.length,\n      paragraphComments,\n      capturedAt: new Date().toISOString(),\n    };\n\n    if (\n      !title &&\n      !author &&\n      !reads &&\n      !votes &&\n      !headerComments &&\n      paragraphComments.length === 0\n    )\n      return null;\n\n    try {\n      const key = `writerAnalyticsStats-${storyId}`;\n      chrome.storage.local.set({ [key]: stats }, () => {});\n    } catch (err) {\n      console.warn(\"[content] storage set failed\", err);\n    }\n\n    try {\n      chrome.runtime.sendMessage({ type: \"WA_STATS\", payload: stats }, () => {});\n    } catch (e) {}\n\n    return stats;\n  } catch (err) {\n    console.error(\"[content] extract error\", err);\n    return null;\n  }\n}\n\nfunction waitForContent(): Promise<void> {\n  return new Promise((resolve) => {\n    const check = () => {\n      if (document.querySelector(\"h1\") || document.querySelector(\"p\")) resolve();\n      else setTimeout(check, 400);\n    };\n    check();\n  });\n}\n\nasync function init() {\n  if (!window.location.href.includes(\"wattpad.com\")) return;\n  await waitForContent();\n  await new Promise((r) => setTimeout(r, 800));\n  const stats = extractStoryStats();\n  if (!stats) {\n    const sample: StoryStats = {\n      storyId: \"sample\",\n      title: \"Sample Story Title\",\n      author: \"Sample Author\",\n      reads: 12345,\n      votes: 678,\n      headerComments: 21,\n      commentItemsCount: 3,\n      paragraphComments: [\n        { pId: \"p1\", count: 5, snippet: \"Sample para one...\" },\n        { pId: \"p2\", count: 3, snippet: \"Sample para two...\" },\n        { pId: \"p3\", count: 8, snippet: \"Sample para three...\" },\n      ],\n      capturedAt: new Date().toISOString(),\n    };\n    try {\n      chrome.runtime.sendMessage({ type: \"WA_STATS\", payload: sample }, () => {});\n    } catch {}\n  }\n}\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (!message || !message.type) return;\n  if (message.type === \"WA_REFRESH\") {\n    const s = extractStoryStats();\n    sendResponse({ payload: s || null });\n    return true;\n  }\n  if (message.type === \"WA_URL_CHANGE\") {\n    const s = extractStoryStats();\n    sendResponse({ success: !!s, payload: s || null });\n    return true;\n  }\n});\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", init);\n} else {\n  setTimeout(init, 600);\n}\n\nlet lastUrl = location.href;\nsetInterval(() => {\n  if (location.href !== lastUrl) {\n    lastUrl = location.href;\n    init();\n  }\n}, 1200);\n"],
  "mappings": "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",
  "names": []
}
